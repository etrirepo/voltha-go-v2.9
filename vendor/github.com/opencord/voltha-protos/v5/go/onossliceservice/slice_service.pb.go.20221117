// Code generated by protoc-gen-go. DO NOT EDIT.
// source: voltha_protos/slice_service.proto

package onossliceservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DbaType int32

const (
	DbaType_DBA_TYPE_SR_DBA DbaType = 0
	DbaType_DBA_TYPE_LL_DBA DbaType = 1
	DbaType_DBA_TYPE_CO_DBA DbaType = 2
)

var DbaType_name = map[int32]string{
	0: "DBA_TYPE_SR_DBA",
	1: "DBA_TYPE_LL_DBA",
	2: "DBA_TYPE_CO_DBA",
}

var DbaType_value = map[string]int32{
	"DBA_TYPE_SR_DBA": 0,
	"DBA_TYPE_LL_DBA": 1,
	"DBA_TYPE_CO_DBA": 2,
}

func (x DbaType) String() string {
	return proto.EnumName(DbaType_name, int32(x))
}

func (DbaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{0}
}

type DeviceStatus int32

const (
	DeviceStatus_UP   DeviceStatus = 0
	DeviceStatus_DOWN DeviceStatus = 1
)

var DeviceStatus_name = map[int32]string{
	0: "UP",
	1: "DOWN",
}

var DeviceStatus_value = map[string]int32{
	"UP":   0,
	"DOWN": 1,
}

func (x DeviceStatus) String() string {
	return proto.EnumName(DeviceStatus_name, int32(x))
}

func (DeviceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{1}
}

type DeviceType int32

const (
	DeviceType_WB_OLT_1G  DeviceType = 0
	DeviceType_WB_OLT_10G DeviceType = 1
	DeviceType_WB_OLT_25G DeviceType = 2
	DeviceType_WB_OLT_50G DeviceType = 3
)

var DeviceType_name = map[int32]string{
	0: "WB_OLT_1G",
	1: "WB_OLT_10G",
	2: "WB_OLT_25G",
	3: "WB_OLT_50G",
}

var DeviceType_value = map[string]int32{
	"WB_OLT_1G":  0,
	"WB_OLT_10G": 1,
	"WB_OLT_25G": 2,
	"WB_OLT_50G": 3,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}

func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{2}
}

type UniTags struct {
	PonCTag              string   `protobuf:"bytes,1,opt,name=pon_c_tag,json=ponCTag,proto3" json:"pon_c_tag,omitempty"`
	UniPortName          string   `protobuf:"bytes,2,opt,name=uni_port_name,json=uniPortName,proto3" json:"uni_port_name,omitempty"`
	DbaType              string   `protobuf:"bytes,3,opt,name=dba_type,json=dbaType,proto3" json:"dba_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UniTags) Reset()         { *m = UniTags{} }
func (m *UniTags) String() string { return proto.CompactTextString(m) }
func (*UniTags) ProtoMessage()    {}
func (*UniTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{0}
}

func (m *UniTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UniTags.Unmarshal(m, b)
}
func (m *UniTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UniTags.Marshal(b, m, deterministic)
}
func (m *UniTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniTags.Merge(m, src)
}
func (m *UniTags) XXX_Size() int {
	return xxx_messageInfo_UniTags.Size(m)
}
func (m *UniTags) XXX_DiscardUnknown() {
	xxx_messageInfo_UniTags.DiscardUnknown(m)
}

var xxx_messageInfo_UniTags proto.InternalMessageInfo

func (m *UniTags) GetPonCTag() string {
	if m != nil {
		return m.PonCTag
	}
	return ""
}

func (m *UniTags) GetUniPortName() string {
	if m != nil {
		return m.UniPortName
	}
	return ""
}

func (m *UniTags) GetDbaType() string {
	if m != nil {
		return m.DbaType
	}
	return ""
}

type BandwidthInfos struct {
	Rf                   uint32   `protobuf:"varint,1,opt,name=rf,proto3" json:"rf,omitempty"`
	Ra                   uint32   `protobuf:"varint,2,opt,name=ra,proto3" json:"ra,omitempty"`
	Rs                   uint32   `protobuf:"varint,3,opt,name=rs,proto3" json:"rs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BandwidthInfos) Reset()         { *m = BandwidthInfos{} }
func (m *BandwidthInfos) String() string { return proto.CompactTextString(m) }
func (*BandwidthInfos) ProtoMessage()    {}
func (*BandwidthInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{1}
}

func (m *BandwidthInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandwidthInfos.Unmarshal(m, b)
}
func (m *BandwidthInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandwidthInfos.Marshal(b, m, deterministic)
}
func (m *BandwidthInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandwidthInfos.Merge(m, src)
}
func (m *BandwidthInfos) XXX_Size() int {
	return xxx_messageInfo_BandwidthInfos.Size(m)
}
func (m *BandwidthInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_BandwidthInfos.DiscardUnknown(m)
}

var xxx_messageInfo_BandwidthInfos proto.InternalMessageInfo

func (m *BandwidthInfos) GetRf() uint32 {
	if m != nil {
		return m.Rf
	}
	return 0
}

func (m *BandwidthInfos) GetRa() uint32 {
	if m != nil {
		return m.Ra
	}
	return 0
}

func (m *BandwidthInfos) GetRs() uint32 {
	if m != nil {
		return m.Rs
	}
	return 0
}

type AddSliceRequest struct {
	SliceName            string          `protobuf:"bytes,1,opt,name=slice_name,json=sliceName,proto3" json:"slice_name,omitempty"`
	PortName             string          `protobuf:"bytes,2,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
	Tags                 *UniTags        `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	BwInfos              *BandwidthInfos `protobuf:"bytes,4,opt,name=bwInfos,proto3" json:"bwInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddSliceRequest) Reset()         { *m = AddSliceRequest{} }
func (m *AddSliceRequest) String() string { return proto.CompactTextString(m) }
func (*AddSliceRequest) ProtoMessage()    {}
func (*AddSliceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{2}
}

func (m *AddSliceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSliceRequest.Unmarshal(m, b)
}
func (m *AddSliceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSliceRequest.Marshal(b, m, deterministic)
}
func (m *AddSliceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSliceRequest.Merge(m, src)
}
func (m *AddSliceRequest) XXX_Size() int {
	return xxx_messageInfo_AddSliceRequest.Size(m)
}
func (m *AddSliceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSliceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSliceRequest proto.InternalMessageInfo

func (m *AddSliceRequest) GetSliceName() string {
	if m != nil {
		return m.SliceName
	}
	return ""
}

func (m *AddSliceRequest) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *AddSliceRequest) GetTags() *UniTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AddSliceRequest) GetBwInfos() *BandwidthInfos {
	if m != nil {
		return m.BwInfos
	}
	return nil
}

type DeviceStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceStatusRequest) Reset()         { *m = DeviceStatusRequest{} }
func (m *DeviceStatusRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceStatusRequest) ProtoMessage()    {}
func (*DeviceStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{3}
}

func (m *DeviceStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceStatusRequest.Unmarshal(m, b)
}
func (m *DeviceStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceStatusRequest.Marshal(b, m, deterministic)
}
func (m *DeviceStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceStatusRequest.Merge(m, src)
}
func (m *DeviceStatusRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceStatusRequest.Size(m)
}
func (m *DeviceStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceStatusRequest proto.InternalMessageInfo

type PortStatus struct {
	Identifier           string       `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Status               DeviceStatus `protobuf:"varint,2,opt,name=status,proto3,enum=onossliceservice.DeviceStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PortStatus) Reset()         { *m = PortStatus{} }
func (m *PortStatus) String() string { return proto.CompactTextString(m) }
func (*PortStatus) ProtoMessage()    {}
func (*PortStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{4}
}

func (m *PortStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortStatus.Unmarshal(m, b)
}
func (m *PortStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortStatus.Marshal(b, m, deterministic)
}
func (m *PortStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortStatus.Merge(m, src)
}
func (m *PortStatus) XXX_Size() int {
	return xxx_messageInfo_PortStatus.Size(m)
}
func (m *PortStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PortStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PortStatus proto.InternalMessageInfo

func (m *PortStatus) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *PortStatus) GetStatus() DeviceStatus {
	if m != nil {
		return m.Status
	}
	return DeviceStatus_UP
}

type DeviceStatusResponse struct {
	Identifier           string        `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Type                 DeviceType    `protobuf:"varint,2,opt,name=type,proto3,enum=onossliceservice.DeviceType" json:"type,omitempty"`
	Status               DeviceStatus  `protobuf:"varint,3,opt,name=status,proto3,enum=onossliceservice.DeviceStatus" json:"status,omitempty"`
	PortStatus           []*PortStatus `protobuf:"bytes,4,rep,name=portStatus,proto3" json:"portStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeviceStatusResponse) Reset()         { *m = DeviceStatusResponse{} }
func (m *DeviceStatusResponse) String() string { return proto.CompactTextString(m) }
func (*DeviceStatusResponse) ProtoMessage()    {}
func (*DeviceStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{5}
}

func (m *DeviceStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceStatusResponse.Unmarshal(m, b)
}
func (m *DeviceStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceStatusResponse.Marshal(b, m, deterministic)
}
func (m *DeviceStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceStatusResponse.Merge(m, src)
}
func (m *DeviceStatusResponse) XXX_Size() int {
	return xxx_messageInfo_DeviceStatusResponse.Size(m)
}
func (m *DeviceStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceStatusResponse proto.InternalMessageInfo

func (m *DeviceStatusResponse) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *DeviceStatusResponse) GetType() DeviceType {
	if m != nil {
		return m.Type
	}
	return DeviceType_WB_OLT_1G
}

func (m *DeviceStatusResponse) GetStatus() DeviceStatus {
	if m != nil {
		return m.Status
	}
	return DeviceStatus_UP
}

func (m *DeviceStatusResponse) GetPortStatus() []*PortStatus {
	if m != nil {
		return m.PortStatus
	}
	return nil
}

type AddSliceResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSliceResponse) Reset()         { *m = AddSliceResponse{} }
func (m *AddSliceResponse) String() string { return proto.CompactTextString(m) }
func (*AddSliceResponse) ProtoMessage()    {}
func (*AddSliceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_020609b4ea7088de, []int{6}
}

func (m *AddSliceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSliceResponse.Unmarshal(m, b)
}
func (m *AddSliceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSliceResponse.Marshal(b, m, deterministic)
}
func (m *AddSliceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSliceResponse.Merge(m, src)
}
func (m *AddSliceResponse) XXX_Size() int {
	return xxx_messageInfo_AddSliceResponse.Size(m)
}
func (m *AddSliceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSliceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSliceResponse proto.InternalMessageInfo

func (m *AddSliceResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterEnum("onossliceservice.DbaType", DbaType_name, DbaType_value)
	proto.RegisterEnum("onossliceservice.DeviceStatus", DeviceStatus_name, DeviceStatus_value)
	proto.RegisterEnum("onossliceservice.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterType((*UniTags)(nil), "onossliceservice.UniTags")
	proto.RegisterType((*BandwidthInfos)(nil), "onossliceservice.BandwidthInfos")
	proto.RegisterType((*AddSliceRequest)(nil), "onossliceservice.AddSliceRequest")
	proto.RegisterType((*DeviceStatusRequest)(nil), "onossliceservice.DeviceStatusRequest")
	proto.RegisterType((*PortStatus)(nil), "onossliceservice.PortStatus")
	proto.RegisterType((*DeviceStatusResponse)(nil), "onossliceservice.DeviceStatusResponse")
	proto.RegisterType((*AddSliceResponse)(nil), "onossliceservice.AddSliceResponse")
}

func init() { proto.RegisterFile("voltha_protos/slice_service.proto", fileDescriptor_020609b4ea7088de) }

var fileDescriptor_020609b4ea7088de = []byte{
	// 619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xd3, 0x3c,
	0x18, 0x6e, 0xd2, 0xaa, 0x3f, 0xef, 0xb6, 0x2e, 0xf2, 0xbe, 0x0f, 0x75, 0x03, 0x46, 0x17, 0x09,
	0x34, 0x55, 0x5a, 0x5a, 0x8a, 0x86, 0x10, 0xe2, 0x80, 0x65, 0x45, 0x05, 0x31, 0xad, 0x53, 0xd2,
	0x69, 0x82, 0x13, 0xcb, 0x6d, 0xdc, 0x2c, 0xd2, 0x66, 0x87, 0xd8, 0xd9, 0xb4, 0x3b, 0xe0, 0x92,
	0xb8, 0x00, 0xae, 0x83, 0x6b, 0x41, 0x71, 0x52, 0x9a, 0xac, 0x40, 0xc5, 0xe1, 0xfb, 0xe4, 0x79,
	0xfd, 0xfc, 0x38, 0x09, 0xec, 0xdd, 0xf0, 0x2b, 0x79, 0x49, 0x70, 0x18, 0x71, 0xc9, 0x45, 0x57,
	0x5c, 0x05, 0x53, 0x8a, 0x05, 0x8d, 0x6e, 0x82, 0x29, 0xb5, 0x14, 0x88, 0x0c, 0xce, 0xb8, 0x50,
	0x0f, 0x32, 0xdc, 0xf4, 0xa0, 0x76, 0xce, 0x82, 0x31, 0xf1, 0x05, 0xda, 0x81, 0x46, 0xc8, 0x19,
	0x9e, 0x62, 0x49, 0xfc, 0x96, 0xd6, 0xd6, 0xf6, 0x1b, 0x4e, 0x2d, 0xe4, 0xec, 0x78, 0x4c, 0x7c,
	0x64, 0xc2, 0x46, 0xcc, 0x02, 0x1c, 0xf2, 0x48, 0x62, 0x46, 0xae, 0x69, 0x4b, 0x57, 0xcf, 0xd7,
	0x62, 0x16, 0x9c, 0xf1, 0x48, 0x9e, 0x92, 0x6b, 0x8a, 0xb6, 0xa1, 0xee, 0x4d, 0x08, 0x96, 0x77,
	0x21, 0x6d, 0x95, 0xd3, 0x75, 0x6f, 0x42, 0xc6, 0x77, 0x21, 0x35, 0xdf, 0x42, 0xd3, 0x26, 0xcc,
	0xbb, 0x0d, 0x3c, 0x79, 0xf9, 0x81, 0xcd, 0xb8, 0x40, 0x4d, 0xd0, 0xa3, 0x99, 0x52, 0xd9, 0x70,
	0xf4, 0x68, 0xa6, 0x66, 0xa2, 0x4e, 0x4d, 0x66, 0xa2, 0x66, 0xa1, 0x8e, 0x49, 0x66, 0x61, 0x7e,
	0xd3, 0x60, 0xf3, 0xc8, 0xf3, 0xdc, 0xc4, 0xbb, 0x43, 0xbf, 0xc4, 0x54, 0x48, 0xf4, 0x18, 0x20,
	0x0d, 0xa9, 0x1c, 0xa5, 0x8e, 0x1b, 0x0a, 0x51, 0x7e, 0x1e, 0x26, 0x79, 0x8a, 0x7e, 0xeb, 0xe1,
	0xdc, 0xec, 0x01, 0x54, 0x24, 0xf1, 0x53, 0x85, 0xb5, 0xfe, 0xb6, 0x75, 0xbf, 0x18, 0x2b, 0x6b,
	0xc5, 0x51, 0x34, 0xf4, 0x1a, 0x6a, 0x93, 0x5b, 0xe5, 0xbc, 0x55, 0x51, 0x1b, 0xed, 0xe5, 0x8d,
	0x62, 0x42, 0x67, 0xbe, 0x60, 0xfe, 0x0f, 0x5b, 0x03, 0x9a, 0x30, 0x5c, 0x49, 0x64, 0x2c, 0x32,
	0xf7, 0xa6, 0x07, 0x90, 0x54, 0x97, 0x82, 0x68, 0x17, 0x20, 0xf0, 0x28, 0x93, 0xc1, 0x2c, 0xa0,
	0x51, 0x96, 0x25, 0x87, 0xa0, 0x97, 0x50, 0x15, 0x8a, 0xa9, 0x92, 0x34, 0xfb, 0xbb, 0xcb, 0xfa,
	0x05, 0x91, 0x8c, 0x6d, 0xfe, 0xd0, 0xe0, 0xbf, 0xa2, 0xba, 0x08, 0x39, 0x13, 0x74, 0xa5, 0x60,
	0x0f, 0x2a, 0xea, 0x26, 0x53, 0xb9, 0x47, 0x7f, 0x92, 0x4b, 0xae, 0xd7, 0x51, 0xcc, 0x9c, 0xc5,
	0xf2, 0xbf, 0x58, 0x44, 0x6f, 0x00, 0xc2, 0x5f, 0x45, 0xb4, 0x2a, 0xed, 0xf2, 0xfe, 0xda, 0xef,
	0xf4, 0x16, 0x65, 0x39, 0x39, 0xbe, 0xd9, 0x01, 0x63, 0xf1, 0x5e, 0x64, 0xd9, 0x1e, 0x40, 0x35,
	0xa2, 0x22, 0xbe, 0x92, 0x59, 0xae, 0x6c, 0xea, 0xbc, 0x87, 0xda, 0x20, 0x7d, 0x23, 0xd1, 0x16,
	0x6c, 0x0e, 0xec, 0x23, 0x3c, 0xfe, 0x74, 0xf6, 0x0e, 0xbb, 0x0e, 0x1e, 0xd8, 0x47, 0x46, 0xa9,
	0x00, 0x9e, 0x9c, 0x28, 0x50, 0x2b, 0x80, 0xc7, 0x23, 0x05, 0xea, 0x9d, 0x36, 0xac, 0xe7, 0xb3,
	0xa0, 0x2a, 0xe8, 0xe7, 0x67, 0x46, 0x09, 0xd5, 0xa1, 0x32, 0x18, 0x5d, 0x9c, 0x1a, 0x5a, 0xe7,
	0x23, 0xc0, 0xa2, 0x21, 0xb4, 0x01, 0x8d, 0x0b, 0x1b, 0x8f, 0x4e, 0xc6, 0xf8, 0xf9, 0xd0, 0x28,
	0xa1, 0x26, 0xc0, 0x7c, 0xec, 0x0d, 0x0d, 0x2d, 0x37, 0xf7, 0x0f, 0x87, 0x86, 0x9e, 0x9b, 0x0f,
	0x7b, 0x43, 0xa3, 0xdc, 0xff, 0xae, 0xc1, 0xba, 0x8a, 0xe8, 0xa6, 0x65, 0x20, 0x17, 0xea, 0xf3,
	0xd4, 0x68, 0x6f, 0xb9, 0xab, 0x7b, 0x5f, 0xca, 0x8e, 0xf9, 0x37, 0x4a, 0x5a, 0x9a, 0x59, 0x42,
	0x78, 0x1e, 0xca, 0xa1, 0x49, 0xc1, 0xe8, 0xe9, 0x8a, 0x0b, 0xcc, 0x0e, 0x7f, 0xb6, 0x8a, 0x96,
	0x0a, 0xf4, 0x34, 0x3b, 0x84, 0x27, 0x3c, 0xf2, 0x2d, 0x2a, 0xa3, 0x60, 0xb1, 0x63, 0xe5, 0x37,
	0x6d, 0x63, 0x74, 0x3a, 0x72, 0xf3, 0x51, 0x3f, 0xbf, 0xf2, 0x03, 0x79, 0x19, 0x4f, 0xac, 0x29,
	0xbf, 0xee, 0xf2, 0x90, 0xb2, 0x29, 0x8f, 0xbc, 0x6e, 0xfa, 0xab, 0x3b, 0xc8, 0x7e, 0x75, 0x37,
	0x87, 0x5d, 0x9f, 0x77, 0xef, 0xbb, 0xf8, 0xaa, 0x69, 0x93, 0xaa, 0x62, 0xbc, 0xf8, 0x19, 0x00,
	0x00, 0xff, 0xff, 0x6c, 0x1f, 0x84, 0x8a, 0x1c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SliceServiceClient is the client API for SliceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SliceServiceClient interface {
	AddSlice(ctx context.Context, in *AddSliceRequest, opts ...grpc.CallOption) (*AddSliceResponse, error)
	DeviceReport(ctx context.Context, in *DeviceStatusRequest, opts ...grpc.CallOption) (SliceService_DeviceReportClient, error)
}

type sliceServiceClient struct {
	cc *grpc.ClientConn
}

func NewSliceServiceClient(cc *grpc.ClientConn) SliceServiceClient {
	return &sliceServiceClient{cc}
}

func (c *sliceServiceClient) AddSlice(ctx context.Context, in *AddSliceRequest, opts ...grpc.CallOption) (*AddSliceResponse, error) {
	out := new(AddSliceResponse)
	err := c.cc.Invoke(ctx, "/onossliceservice.SliceService/AddSlice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sliceServiceClient) DeviceReport(ctx context.Context, in *DeviceStatusRequest, opts ...grpc.CallOption) (SliceService_DeviceReportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SliceService_serviceDesc.Streams[0], "/onossliceservice.SliceService/DeviceReport", opts...)
	if err != nil {
		return nil, err
	}
	x := &sliceServiceDeviceReportClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SliceService_DeviceReportClient interface {
	Recv() (*DeviceStatusResponse, error)
	grpc.ClientStream
}

type sliceServiceDeviceReportClient struct {
	grpc.ClientStream
}

func (x *sliceServiceDeviceReportClient) Recv() (*DeviceStatusResponse, error) {
	m := new(DeviceStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SliceServiceServer is the server API for SliceService service.
type SliceServiceServer interface {
	AddSlice(context.Context, *AddSliceRequest) (*AddSliceResponse, error)
	DeviceReport(*DeviceStatusRequest, SliceService_DeviceReportServer) error
}

// UnimplementedSliceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSliceServiceServer struct {
}

func (*UnimplementedSliceServiceServer) AddSlice(ctx context.Context, req *AddSliceRequest) (*AddSliceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSlice not implemented")
}
func (*UnimplementedSliceServiceServer) DeviceReport(req *DeviceStatusRequest, srv SliceService_DeviceReportServer) error {
	return status.Errorf(codes.Unimplemented, "method DeviceReport not implemented")
}

func RegisterSliceServiceServer(s *grpc.Server, srv SliceServiceServer) {
	s.RegisterService(&_SliceService_serviceDesc, srv)
}

func _SliceService_AddSlice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSliceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SliceServiceServer).AddSlice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onossliceservice.SliceService/AddSlice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SliceServiceServer).AddSlice(ctx, req.(*AddSliceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SliceService_DeviceReport_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeviceStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SliceServiceServer).DeviceReport(m, &sliceServiceDeviceReportServer{stream})
}

type SliceService_DeviceReportServer interface {
	Send(*DeviceStatusResponse) error
	grpc.ServerStream
}

type sliceServiceDeviceReportServer struct {
	grpc.ServerStream
}

func (x *sliceServiceDeviceReportServer) Send(m *DeviceStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SliceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "onossliceservice.SliceService",
	HandlerType: (*SliceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSlice",
			Handler:    _SliceService_AddSlice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeviceReport",
			Handler:       _SliceService_DeviceReport_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "voltha_protos/slice_service.proto",
}
